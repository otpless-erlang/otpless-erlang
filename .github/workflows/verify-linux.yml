#
# A workflow to verify OTPless Erlang builds for the Linux platform
# successfully.
#
# Support for Linux (Debian and Alpine) is primary and therefore we test with
# all the architectures.
#
# No debug builds on Alpine to reduce the matrix size (because if it works on
# Debian, it will high likely works on Alpine).
#
name: Verify Linux

on:
  push:
    branches: [master]

jobs:
  build-debian:
    strategy:
      matrix:
        arch: ['amd64', 'arm64']
        flavor: ['emu', 'jit']

    runs-on: linux-${{ matrix.arch }}
    container:
      image: debian:12-slim

    steps:
    - name: Get files
      uses: actions/checkout@v4
      with:
        path: source

    - name: Install dependencies
      run: |
        apt-get update
        apt-get install -y build-essential cmake

    - name: Build project
      run: |
        cmake -S source -B build -DERLANG_BUILD_FLAVOR=${{ matrix.flavor }}
        cmake --build build --verbose
        cmake --install build --prefix install

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: otpless-erlang-${{ matrix.flavor }}-debian-${{ matrix.arch }}
        path: install/

    - name: Install dependencies
      run: |
        apt-get update
        apt-get install -y build-essential cmake

    - name: Build project (debug)
      run: |
        cmake -S source -B build-debug -DERLANG_BUILD_TYPE=debug -DERLANG_BUILD_FLAVOR=${{ matrix.flavor }}
        cmake --build build-debug --verbose
        cmake --install build-debug --prefix install-debug

    - name: Upload artifact (debug)
      uses: actions/upload-artifact@v4
      with:
        name: otpless-erlang-${{ matrix.flavor }}-debian-${{ matrix.arch }}-debug
        path: install-debug/

  build-alpine:
    strategy:
      matrix:
        # XXX: Builds for ARM64 was disabled because JavaScript actions are
        #      not supported on Alpine/ARM64.
        # arch: ['amd64', 'arm64']
        arch: ['amd64']
        flavor: ['emu', 'jit']

    runs-on: linux-${{ matrix.arch }}
    container:
      image: alpine:3

    steps:
    - name: Get files
      uses: actions/checkout@v4
      with:
        path: source

    - name: Install dependencies
      run: apk add --no-cache build-base cmake

    - name: Build project
      run: |
        cmake -S source -B build -DERLANG_BUILD_FLAVOR=${{ matrix.flavor }}
        cmake --build build --verbose
        cmake --install build --prefix install

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: otpless-erlang-${{ matrix.flavor }}-alpine-${{ matrix.arch }}
        path: install/
